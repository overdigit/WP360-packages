#!/bin/sh
PREREQ=""
prereqs()
{
  echo "$PREREQ"
}
case $1 in
prereqs)
  prereqs
  exit 0
;;
esac

. /scripts/functions
# Begin real processing below this line
export MAC_ADDRESS="$(cut /sys/class/net/eth0/address -d: -f1-6 -O '')"
export BS=$((10*1024*1024))
export ZSTD_COMP_LEVEL=3


shutdown_guard()
{
  gpioset --bias=pull-down --drive=push-pull gpiochip0 24=1
  sleep 0.005
  gpioset --bias=pull-down --drive=push-pull gpiochip0 24=0
}


set_run_led()
{
  case "$1" in
    on)
      gpioset --bias=pull-up --drive=open-drain gpiochip0 17=0
      ;;
    off)
      gpioset --bias=pull-up --drive=open-drain gpiochip0 17=1
      ;;
  esac
}


blink_led()
{
  case $1 in
    0)
      blink=1
      steps=1
      waiting=0
      ;;
    1|2|3|4|5|6|7|8|9)
      blink=0.2
      steps=$1
      waiting=3
      ;;
    *)
      echo "Usage: $0 <0|1|2|3|4|5|6|7|8|9>" >&2
      return
      ;;
  esac
  while true
  do
    for i in $(seq 1 $steps)
    do
      set_run_led on
      sleep $blink
      set_run_led off
      sleep $blink
    done
    sleep $waiting
  done
}


find_trigger()
{
  if [[ -e "/dev/disk/by-label/WP360SAVE" ]] ; then
    echo "save"
  elif [[ -e "/dev/disk/by-label/WP360RECVINT" ]] || grep -q "wp360-restore" /proc/cmdline ; then
    echo "factory_restore"
  elif [[ -e "/dev/disk/by-label/WP360RECV" ]] ; then
    echo "recover"
  elif grep -q "wp360-factory-backup" /proc/cmdline ; then
    echo "factory_backup"
  elif grep -q "wp360-grow-fs" /proc/cmdline ; then
    echo "grow_fs"
  fi
  return 0
}


wp360_save()
{
  # Return codes:
  # 1: wrong argument (how?)
  # 2: couldn't create or mount target fs for image storage (corrupted drive/flash?)
  # 3: couldn't move previous image, or remove even older image (corrupted drive/flash?)
  # 4: couldn't add cmdline argument to reexpand the filesystem (corrupted flash?)
  # 5: fsck couldn't run, fsck couldn't fix, or resize2fs failed (corrupted flash / root filesystem?)
  # 6: couldn't read mmcblk0, or couldn't write the archive on target fs (image is bigger than the free space available?)
  
  shutdown_guard
  case "$1" in
    internal)
      TARGET=/dev/disk/by-label/WP360IntRecovery
      if ! [[ -e "$TARGET" ]] ; then
        # Should necessarily be /dev/mmcblk0p4
        TARGET=/dev/mmcblk0p4
        mke2fs -q -t ext4 -L "WP360IntRecovery" $TARGET || return 2
      fi
      ;;
    external)
      TARGET=/dev/disk/by-label/WP360SAVE
      ;;
    *)
      return 1
      ;;
  esac

  mkdir /mnt /mnt/target /mnt/boot
  
  mount "$TARGET" /mnt/target || return 2
  
  if [[ -e "/mnt/target/WP360_${MAC_ADDRESS}.img.zst" ]] ; then
    if [[ -e "/mnt/target/WP360_${MAC_ADDRESS}.old.img.zst" ]] ; then
      rm "/mnt/target/WP360_${MAC_ADDRESS}.old.img.zst" || return 3
    fi
    mv "/mnt/target/WP360_${MAC_ADDRESS}.img.zst" "/mnt/target/WP360_${MAC_ADDRESS}.old.img.zst" || return 3
  fi
  
  mount /dev/disk/by-label/bootfs /mnt/boot || return 4
  sed -i 's/$/ wp360-grow-fs/' /mnt/boot/cmdline.txt || return 4
  case "$1" in
    internal)
      sed -i 's/wp360-factory-backup//' /mnt/boot/cmdline.txt || return 4
      ;;
  esac
  sync
  umount /mnt/boot || return 4

  e2fsck -f /dev/disk/by-label/rootfs
  [[ $? -lt 4 ]] || return 5
  resize2fs -f -M /dev/disk/by-label/rootfs || return 5
  ROOT_PART_START=$(( $(cat /sys/block/mmcblk0/mmcblk0p2/start) *512))
  ROOT_FS_SIZE=$(dumpe2fs -h /dev/disk/by-label/rootfs 2>/dev/null | awk -F: '/Block count/{count=$2} /Block size/{size=$2} END{print count*size}')
  IMG_SIZE_COUNT=$(( (ROOT_PART_START + ROOT_FS_SIZE + BS * 10) / BS ))
  dd if=/dev/mmcblk0 bs=$BS count=$IMG_SIZE_COUNT | zstd -$ZSTD_COMP_LEVEL -o /mnt/target/WP360_${MAC_ADDRESS}.img.zst || return 6
  sync
  umount /mnt/target
  return 0
}


wp360_restore()
{
  # Return codes:
  # 1: wrong argument (how?)
  # 2: couldn't mount the target filesystem (internal restore without a proper internal recovery partition?)
  # 3: no image to restore (was it ever created / is it an image for a different device?)
  # 6: couldn't read the image, image is corrupted, or couldn't write the image (broken flash/pendrive?)

  shutdown_guard
  case "$1" in
    internal)
      TARGET=/dev/disk/by-label/WP360IntRecovery
      ;;
    external)
      TARGET=/dev/disk/by-label/WP360RECV
      ;;
    *)
      return 1
      ;;
  esac
  mkdir /mnt /mnt/target

  mount "$TARGET" /mnt/target || return 2

  [[ -e "/mnt/target/WP360_${MAC_ADDRESS}.img.zst" ]] || return 3

  zstd -k -d "/mnt/target/WP360_${MAC_ADDRESS}.img.zst" | dd of=/dev/mmcblk0 bs=$BS oflag=dsync conv=sparse || return 6
  sync
  umount /mnt/target
  return 0
}


wp360_grow_fs()
{
  # Return codes:
  # 4: couldn't remove cmdline argument to grow fs
  # 5: fsck couldn't run, fsck couldn't fix, or resize2fs failed (corrupted flash / root filesystem?)

  shutdown_guard
  mkdir /mnt /mnt/boot
  mount /dev/disk/by-label/bootfs /mnt/boot || return 4
  sed -i 's/ wp360-grow-fs//' /mnt/boot/cmdline.txt || return 4
  sync
  umount /mnt/boot || return 4
  e2fsck -f /dev/disk/by-label/rootfs
  [[ $? -lt 4 ]] || return 5
  resize2fs -f -M /dev/disk/by-label/rootfs || return 5

  return 0
}


blink_led 0 &
pid=$!
case "$(find_trigger)" in
  save)
    wp360_save external
    ;;
  factory_backup)
    wp360_save internal
    ;;
  recover)
    wp360_restore external
    ;;
  factory_restore)
    wp360_restore internal
    ;;
  grow_fs)
    wp360_grow_fs
    ;;
  *)
    kill $pid
    set_run_led off
    exit 0
    ;; 
esac

ret=$?
kill $pid
set_run_led off

sleep 1
case $ret in
  0)
    while true
    do
      set_run_led on
      sleep 1
      set_run_led off
      sleep 0.2
    done
    ;;
  1|2|3|4|5|6|7|8|9)
    blink_led $ret
    ;;
  *)
    sleep 86400
    poweroff -f
    ;;
esac
